
import java.io.File;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author andre
 */
public class Interface2 extends javax.swing.JFrame {

    /**
     * Creates new form Interface2
     */
    public Interface2() {
        
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        abrir = new javax.swing.JButton();
        exibirDados = new javax.swing.JButton();
        nomeArquivo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        painelEntrada = new javax.swing.JTextPane();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        selectAtributo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        painelResultado = new javax.swing.JTextPane();
        cxSelecN = new javax.swing.JSpinner();
        campoEntrada = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        labolOrdem = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        salvar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        painelFinal = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(650, 450));

        abrir.setText("Abrir arquivo");
        abrir.setActionCommand("abrirArquivo");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirArquivoActionPerformed(evt);
            }
        });

        exibirDados.setText("Exibir dados");
        exibirDados.setToolTipText("Base de dados do arquivo");
        exibirDados.setMaximumSize(new java.awt.Dimension(95, 23));
        exibirDados.setMinimumSize(new java.awt.Dimension(95, 23));
        exibirDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exibirDadosActionPerformed(evt);
            }
        });

        nomeArquivo.setToolTipText("");

        painelEntrada.setEditable(false);
        painelEntrada.setPreferredSize(new java.awt.Dimension(50, 80));
        jScrollPane2.setViewportView(painelEntrada);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exibirDados, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 367, Short.MAX_VALUE))
                    .addComponent(nomeArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exibirDados, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pr√©-processar", null, jPanel1, "");
        jPanel1.getAccessibleContext().setAccessibleName("");

        jButton1.setText("Classificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classificarActionPerformed(evt);
            }
        });

        jLabel1.setText("Atributo a ser classificado:");

        selectAtributo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1" }));

        jLabel6.setText("Valor de N:");

        jScrollPane1.setViewportView(painelResultado);

        cxSelecN.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        jLabel2.setText("Insira os dados na mesma ordem da base de dados separados por virgula:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                    .addComponent(labolOrdem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cxSelecN, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(campoEntrada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addGap(50, 50, 50))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(selectAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cxSelecN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labolOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(campoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Classificar", jPanel2);

        jLabel7.setText("Nova base de dados:");

        salvar.setText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(painelFinal);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(salvar)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(salvar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jTabbedPane1.addTab("Resultado", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String path = "";
    private String path_saida = "";
    private String textoFinal = "";
    private String atributos = "";
    private String resultado = "";
    Arquivo arq = new Arquivo();
    Algoritmo alg = new Algoritmo();
    //this.exibirDados.setDisabled();
    
    /**
     * Metodo executado quando o bot√£o "Abrir arquivo" for acionado.
     * Executa JFileChooser e ler o arquivo selecionado e mostra no painel. 
     * @param evt 
     */
    private void abrirArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirArquivoActionPerformed
        
        JFileChooser file = new JFileChooser(); 
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        //filtro apenas para arquivos txt e arff
        file.addChoosableFileFilter(new FileNameExtensionFilter( "Arquivo arff (*.arff)", "arff"));
        file.addChoosableFileFilter(new FileNameExtensionFilter( "Arquivo texto (*.txt)", "txt"));
        
        file.setAcceptAllFileFilterUsed(false);  
        // Impede sele√ß√µes m√∫ltiplas.  
        file.setMultiSelectionEnabled(false);  
          int i = file.showSaveDialog(null);
       
        if (i==1){
           this.path="erro ao abrir arquivo";
           this.nomeArquivo.setText(path);
        } else {
            File arquivo = file.getSelectedFile();
            this.path=arquivo.getPath();
            System.out.println(arquivo.getPath());
            this.nomeArquivo.setText("Arquivo: "+path+" aberto.");
            
            //chamada do m√©todo de leitura de arquivo
            //Arquivo arq = new Arquivo();
            arq.read(path);
        }

    }//GEN-LAST:event_abrirArquivoActionPerformed

    private void exibirDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exibirDadosActionPerformed

        LinkedList<String> linha =  new LinkedList<>();
        linha = arq.getLinhas(); //pega as linhas do arquivo lid
        
        alg.lerLinhas(linha);
        textoFinal = " "; 
        
        selectAtributo.removeAllItems();
         String ordem="Ordem da base: ";
                for(String g:alg.atributos){
                    ordem = ordem+g+",";
                }
          if (ordem.length() > 0) {  
                ordem = ordem.substring (0, ordem.length() - 1);  
            } 
          labolOrdem.setText(ordem);
       
           System.out.println("Nome dos atributos na interface");
           this.atributos="";
        for(String j:alg.atributos){
            this.atributos = this.atributos+j+" - ";
            selectAtributo.addItem(j);
            
            System.out.println(j);
        }
       
        this.getDadosEntrada();
                
    }//GEN-LAST:event_exibirDadosActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed

        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //filtro apenas para arquivos txt
        //file.addChoosableFileFilter(new FileNameExtensionFilter( "Arquivo texto (*.txt)", "txt"));
        file.setAcceptAllFileFilterUsed(false);
        // Impede sele√ß√µes m√∫ltiplas.
        file.setMultiSelectionEnabled(false);
        int i= file.showSaveDialog(null);

        if (i==1){
            this.path_saida="Erro diretorio inv√°lido";
            this.nomeArquivo.setText(path_saida);
        } else {
            File arquivo = file.getSelectedFile();
            this.path_saida=arquivo.getPath();
            //System.out.println(arquivo.getPath());
            this.nomeArquivo.setText("Arquivo salvo em: "+path_saida+"\\Saida.txt");

            // Arquivo arq = new Arquivo();
            String t = textoFinal.replaceAll("%", "%%"); //no metodo de salvar arquivo o % √© um caracter de escape e precisa ter %% pra ler como %
            String fim = t.replaceAll("\n", "%n"); //quebra de linha no metodo de salvar arquivo √© %n
            arq.writer(fim, this.path_saida);

        }
    }//GEN-LAST:event_salvarActionPerformed

    private void classificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classificarActionPerformed

        String classePrincipal = selectAtributo.getSelectedItem().toString();
        
        String  n = cxSelecN.getValue().toString();
        System.out.println("N: "+n);
        //teste
        System.out.println(n+classePrincipal);

            painelResultado.setText(" ");
            
                painelResultado.setText(" ");
                alg.salvarIdAtributos(classePrincipal);//pegar os id de cada atributo
                //teste
                System.out.println(alg.idAtributoClasse);
               
                
                LinkedList<String> linhaEntrada =  new LinkedList<>();
                String temp[];
                temp=campoEntrada.getText().split(",");
                 for(String p:temp){
                        linhaEntrada.add(p);
                        System.out.println(p);
                 }
                
                String classe = alg.start(linhaEntrada, Integer.parseInt(n));
                

                Linha adicionar =  new Linha();
                //adicionar.add(classe);
                //adicionar.add(entrada1.getText());
                
                for(int j=0; j<temp.length;j++){
                    if(j==alg.idAtributoClasse){
                        adicionar.add(classe);
                    }else{
                       adicionar.add(temp[j]);
                   }
                }
                
                alg.dadosLinha.add(adicionar);
                this.atualizaPainelResultado(classe);
                this.atualizaPainelFinal();
                //roda algoritmo
                //double teste = alg.calcularDistancia(5, 5, 10, 10);
                //System.out.println(teste);

            
        
    }//GEN-LAST:event_classificarActionPerformed

    public void getDadosEntrada(){
        textoFinal = "";
        textoFinal = this.atributos+"\n";
        for(int k=0; k<alg.dadosLinha.size(); k++){
            for(int z=0; z<alg.qntAtributos; z++){
                textoFinal = textoFinal + alg.dadosLinha.get(k).get(z)+" - ";
                if(z+1==alg.qntAtributos){
                    textoFinal =textoFinal+"\n";
                }
            }
        }
//        int size = textoFinal.length();
//        String resultado = textoFinal.substring(0, size);
        this.painelEntrada.setText(textoFinal);
    }
    
    public void atualizaPainelResultado(String classe){
        resultado = resultado + "Novo item classificado como: " + classe + "\n";
        painelResultado.setText(resultado);
    }
    
    public void atualizaPainelFinal(){
        textoFinal = "";
        textoFinal = this.atributos+"\n";
        for(int k=0; k<alg.dadosLinha.size(); k++){
            for(int z=0; z<alg.qntAtributos; z++){
                textoFinal = textoFinal + alg.dadosLinha.get(k).get(z)+" - ";
                if(z+1==alg.qntAtributos){
                    textoFinal =textoFinal+"\n";
                }
            }
        }
        this.painelFinal.setText(textoFinal);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrir;
    private javax.swing.JTextField campoEntrada;
    private javax.swing.JSpinner cxSelecN;
    private javax.swing.JButton exibirDados;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labolOrdem;
    private javax.swing.JLabel nomeArquivo;
    private javax.swing.JTextPane painelEntrada;
    private javax.swing.JTextPane painelFinal;
    private javax.swing.JTextPane painelResultado;
    private javax.swing.JButton salvar;
    private javax.swing.JComboBox selectAtributo;
    // End of variables declaration//GEN-END:variables
}
