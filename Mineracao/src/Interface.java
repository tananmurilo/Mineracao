
import java.io.File;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.SpinnerNumberModel;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author murilo
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
        SpinnerNumberModel model = new SpinnerNumberModel(50, 1,100,1);
        cxSup.setModel(model);
             
    }
    
    private String path = "";
    private String path_saida = "";
    private String textoFinal ="";
    Arquivo arq = new Arquivo();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        painelEntrada = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        Status_arquivo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bExecutar = new javax.swing.JButton();
        cxSup = new javax.swing.JSpinner();
        aviso = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuSalvar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painelEntrada.setEditable(false);
        jScrollPane2.setViewportView(painelEntrada);

        jLabel1.setText("Resultados:");

        jLabel3.setText("Suporte Minimo %");

        bExecutar.setText("Executar algoritmo");
        bExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExecutarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(cxSup, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 461, Short.MAX_VALUE)
                        .addComponent(bExecutar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aviso, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Status_arquivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Status_arquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(bExecutar)
                    .addComponent(cxSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(aviso, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("Arquivo");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Abrir arquivo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        menuSalvar.setText("Salvar arquivo");
        menuSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalvarActionPerformed(evt);
            }
        });
        jMenu1.add(menuSalvar);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Metodo executado quando o item "abrir arquivo" do menu for acionado.
     * Executa JFileChooser e ler o arquivo selecionado e mostra no painel. 
     * @param evt 
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
         /* pegar o caminho do arquivo para leitura*/
        
        JFileChooser file = new JFileChooser(); 
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        //filtro apenas para arquivos txt e arff
        file.addChoosableFileFilter(new FileNameExtensionFilter( "Arquivo arff (*.arff)", "arff"));
        file.addChoosableFileFilter(new FileNameExtensionFilter( "Arquivo texto (*.txt)", "txt"));
        
        file.setAcceptAllFileFilterUsed(false);  
        // Impede seleções múltiplas.  
        file.setMultiSelectionEnabled(false);  
          int i= file.showSaveDialog(null);
       
        if (i==1){
           this.path="erro ao abrir arquivo";
           this.Status_arquivo.setText(path);
        } else {
            File arquivo = file.getSelectedFile();
            this.path=arquivo.getPath();
            System.out.println(arquivo.getPath());
            this.Status_arquivo.setText("Arquivo: "+path+" aberto, escolha as opções e execute.");
            
            //chamada do método de leitura de arquivo
            //Arquivo arq = new Arquivo();
            
            arq.read(path);
        }
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
      
    }//GEN-LAST:event_jMenu1ActionPerformed
    /**
     * Metodo executado quando o item "Salvar arquivo" do menu for acionado.
     * Executa JFileChooser pega o path da pasta selecionada e cria um arquivo Saida.txt. 
     * @param evt 
     */
    private void menuSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalvarActionPerformed
        JFileChooser file = new JFileChooser(); 
        file.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //filtro apenas para arquivos txt
        //file.addChoosableFileFilter(new FileNameExtensionFilter( "Arquivo texto (*.txt)", "txt"));  
        file.setAcceptAllFileFilterUsed(false);  
        // Impede seleções múltiplas.  
        file.setMultiSelectionEnabled(false);  
          int i= file.showSaveDialog(null);
       
        if (i==1){
           this.path_saida="Erro diretorio inválido";
           this.Status_arquivo.setText(path_saida);
        } else {
            File arquivo = file.getSelectedFile();
            this.path_saida=arquivo.getPath();
            //System.out.println(arquivo.getPath());
            this.Status_arquivo.setText("Arquivo salvo em: "+path_saida+"\\Saida.txt");
            
           // Arquivo arq = new Arquivo();
            String t = textoFinal.replaceAll("%", "%%"); //no metodo de salvar arquivo o % é um caracter de escape e precisa ter %% pra ler como %
            String fim = t.replaceAll("\n", "%n"); //quebra de linha no metodo de salvar arquivo é %n
            arq.writer(fim, this.path_saida);
            
            
          
        }
    }//GEN-LAST:event_menuSalvarActionPerformed

    private void bExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExecutarActionPerformed
        LinkedList<String> linha =  new LinkedList<>();
        linha = arq.getLinhas(); //pega as linhas do arquivo lid
        Algoritmo alg = new Algoritmo();
        alg.lerLinhas(linha);
        String text="";
        for (String linha1 : linha) {
            if(linha1!=null){// a ultima posição na lista é null 
                text= text+linha1+"\n";
            }    
        }
        //textoFinal ="Apenas um teste de leitura de arquivo, isso vai ser substituido pelo resultado do algoritmo: \n \nConteúdo do arquivo:\n"+text; 
        //this.painelEntrada.setText(textoFinal); //add o texto ao painel
        int sup= (int)cxSup.getValue();
        double cx;
        cx = (double)sup/100;
         
        if(cx>0.01&&cx<=1){
            alg.ln(cx);
            this.painelEntrada.setText(alg.textoFinal);
            this.textoFinal=alg.textoFinal;
            //aviso.setText(Double.toString(cx));
        }else{
            aviso.setText("Coloque valores entre 1-100");
        }
        
    }//GEN-LAST:event_bExecutarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Status_arquivo;
    private javax.swing.JLabel aviso;
    private javax.swing.JButton bExecutar;
    private javax.swing.JSpinner cxSup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem menuSalvar;
    private javax.swing.JTextPane painelEntrada;
    // End of variables declaration//GEN-END:variables
}
